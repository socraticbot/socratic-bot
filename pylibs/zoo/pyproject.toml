[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "socratic-zoo"
version = "0.1.0"
description = "Socratic chatting mdoels"
authors = ["Schrenk, Veronica <veronica@socratic.bot>", "Willows, Sophia <sophia@socratic.bot>"]
readme = "README.md"
packages = [
  { include = "socratic" }
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.5.2"
socratic-chat = { path = "../chat", develop = true }

[tool.poetry.group.dev.dependencies]
pyright = "^1.1.342"
black = "^24.1.1"
isort = "^5.13.2"
pylint = "^3.0.3"
pytest = "^8.0.0"

[tool.black]
line-length = 100
target-version = ['py39']

[tool.pyright]
reportMissingTypeArgument = true  # Report generic classes used without type arguments
strictListInference = true  # Use union types when inferring types of lists elements, instead of Any

[tool.pylint."messages control"]
ignore = ["setup.py", "__init__.py"]
ignore-paths = ["tests"]
